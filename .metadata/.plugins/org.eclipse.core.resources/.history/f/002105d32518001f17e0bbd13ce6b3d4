package org.jsp.reservationapi.service;

import java.util.Optional;

import org.jsp.reservationapi.dao.AdminDao;
import org.jsp.reservationapi.dto.ResponseStructure;
import org.jsp.reservationapi.exception.AdminNotFoundException;
import org.jsp.reservationapi.model.Admin;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

@Service
public class AdminService {
	
	@Autowired
	private AdminDao adminDao;
	
	public ResponseEntity<ResponseStructure<Admin>> saveAdmin(Admin admin) {
		
		ResponseStructure<Admin> structure = new ResponseStructure<>();
		
		structure.setMessage("Admin saved");
		structure.setData(adminDao.saveAdmin(admin));
		structure.setStatusCode(HttpStatus.CREATED.value());
		
		return ResponseEntity.status(HttpStatus.CREATED).body(structure);
	}
	
	public ResponseEntity<ResponseStructure<Admin>> updateAdmin(Admin admin) {
		
		ResponseStructure<Admin> structure = new ResponseStructure<>();
		
		Optional<Admin> recAdmin = adminDao.findAdminById(admin.getId());
		
		if( recAdmin.isPresent()) {
			
			Admin dbAdmin = recAdmin.get();
			
			dbAdmin.setName(admin.getName());
			dbAdmin.setEmail(admin.getEmail());
			dbAdmin.setPhone(admin.getPhone());
			dbAdmin.setGst_number(admin.getGst_number());
			dbAdmin.setTravels_name(admin.getTravels_name());
			dbAdmin.setPassword(admin.getPassword());
			
			structure.setMessage("Admin updated");
			structure.setData(adminDao.saveAdmin(dbAdmin));
			structure.setStatusCode(HttpStatus.ACCEPTED.value());
			
			return ResponseEntity.status(HttpStatus.ACCEPTED).body(structure);	
		}
		
		throw new AdminNotFoundException("Cannot update Admin as Id is invalid");
	}
	
	public void verifyAdminByPhoneAndPassword(long phone, String password) {
		
		ResponseStructure<Admin> structure = new ResponseStructure<>();
		
		Optional<Admin> recAdmin = adminDao.verifyAdminByPhoneAndPassword(phone, password);
		
		if( recAdmin.isPresent()) {
			
			structure.setMessage("Admin Found and Verification Succesfull");
			structure.setStatusCode(HttpStatus.OK.value());
			structure.setData(recAdmin.get());
			return ResponseEntity.status(HttpStatus.OK).body(structure);
		}
	}
}	

